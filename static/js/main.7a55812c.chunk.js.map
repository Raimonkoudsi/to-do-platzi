{"version":3,"sources":["hooks/UseLocalStorage.jsx","context/TodoContext.jsx","components/TodoCounter.jsx","components/TodoSearch.jsx","components/TodoList.jsx","components/TodoItem.jsx","components/CreateTodoButton.jsx","components/Modal.jsx","components/TodoForm.jsx","components/skeleton/TodosError.jsx","components/skeleton/TodosLoading.jsx","components/skeleton/EmptyTodos.jsx","app/AppUI.jsx","app/App.jsx","index.jsx"],"names":["useLocalStorage","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","TodoContext","createContext","TodoProvider","props","todos","saveTodos","completedTodos","filter","todo","completed","length","totalTodos","search","setSearch","openModal","setOpenModal","todosFiltered","text","toLowerCase","includes","Provider","value","insertTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","TodosError","TodosLoading","EmptyTodos","AppUI","Fragment","Array","fill","map","index","i","App","render","StrictMode"],"mappings":"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","file":"static/js/main.7a55812c.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nconst useLocalStorage = (itemName, initialValue) => {\r\n\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n  \r\n    //lista de todos\r\n    const [item, setItem] = useState(initialValue);\r\n  \r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n  \r\n        try {\r\n          const localStorageItem = localStorage.getItem(itemName);\r\n          let parsedItem;\r\n        \r\n          //verificar si hay algun dato guardado en el localstorage\r\n          if(!localStorageItem) {\r\n            localStorage.setItem(itemName , JSON.stringify(initialValue));\r\n            parsedItem = initialValue;\r\n          } else {\r\n            parsedItem = JSON.parse(localStorageItem);\r\n          }\r\n    \r\n          setItem(parsedItem);\r\n          setLoading(false);\r\n  \r\n        } catch(error) {\r\n          setError(error);\r\n        }\r\n  \r\n      }, 1000);\r\n    }, [])\r\n  \r\n    //actualizar el localstorage\r\n    const saveItem = (newItem) => {\r\n  \r\n      try {\r\n        const stringifiedItem = JSON.stringify(newItem);\r\n        localStorage.setItem(itemName, stringifiedItem);\r\n        //recarga la pagina sin necesidad de verificar el storage\r\n        setItem(newItem);\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n  \r\n    };\r\n  \r\n    return {\r\n      item, //recibir\r\n      saveItem, //actualizar\r\n      loading, //cargando\r\n      error //error\r\n    };\r\n}\r\n\r\nexport default useLocalStorage;","import React, {useState, createContext} from \"react\";\r\n\r\n//hooks\r\nimport useLocalStorage from \"../hooks/UseLocalStorage\";\r\n\r\nconst TodoContext = createContext();\r\n\r\n\r\nconst TodoProvider = (props) => {\r\n\r\n    const{\r\n        item: todos, //se renombran\r\n        saveItem: saveTodos, //se renombran\r\n        loading,\r\n        error\r\n    } = useLocalStorage('TODOS_V1', []);\r\n    \r\n    //completados\r\n    const completedTodos = todos.filter(todo => todo.completed).length;\r\n    \r\n    //totales\r\n    const totalTodos = todos.length;\r\n    \r\n    //filtro de busqueda\r\n    const [search, setSearch] = useState('');\r\n\r\n    //modal\r\n    const [openModal, setOpenModal] = useState(false);\r\n    \r\n    //lista de filtracion (sin problema en minusculas)\r\n    let todosFiltered = todos\r\n    if (search)\r\n        todosFiltered = todos.filter(todo => todo.text.toLowerCase().includes(search.toLowerCase()));\r\n    \r\n\r\n    //aÃ±adir todo\r\n    const insertTodo = (text) => {\r\n\r\n        //necesita recargar todos los todos\r\n        const newTodos = [...todos];\r\n        //cambia el valor completed\r\n        newTodos.push({\r\n            completed: false,\r\n            text\r\n        })\r\n    \r\n        saveTodos(newTodos);\r\n    }\r\n    \r\n    //completar todo\r\n    const completeTodo = (text) => {\r\n        //comprueba cual tiene el mismo texto\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n    \r\n        //necesita recargar todos los todos\r\n        const newTodos = [...todos];\r\n        //cambia el valor completed\r\n        todos[todoIndex].completed = true;\r\n    \r\n        saveTodos(newTodos);\r\n    }\r\n    \r\n    //borrar todo\r\n    const deleteTodo = (text) => {\r\n        //comprueba cual tiene el mismo texto\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n    \r\n        //necesita recargar todos los todos\r\n        const newTodos = [...todos];\r\n        //borra el registro por el index\r\n        newTodos.splice(todoIndex, 1);\r\n    \r\n        saveTodos(newTodos);\r\n    }\r\n    \r\n\r\n    return(\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            totalTodos,\r\n            completedTodos,\r\n            search,\r\n            setSearch,\r\n            todosFiltered,\r\n            insertTodo,\r\n            completeTodo,\r\n            deleteTodo,\r\n            openModal,\r\n            setOpenModal\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport { TodoContext, TodoProvider };","import React, {useContext} from 'react';\r\nimport \"../styles/TodoCounter.scss\";\r\n\r\n//context\r\nimport { TodoContext } from '../context/TodoContext';\r\n\r\n\r\nconst TodoCounter = () => {\r\n\r\n    //datos del todocontext\r\n    const { \r\n        totalTodos, \r\n        completedTodos\r\n    } = useContext(TodoContext);\r\n\r\n    return (\r\n        <h2 className=\"todo-counter\">\r\n            Has completado {completedTodos} de {totalTodos} TODOs\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default TodoCounter;\r\n","import React, {useContext} from 'react';\r\nimport \"../styles/TodoSearch.scss\";\r\n\r\n//context\r\nimport { TodoContext } from '../context/TodoContext';\r\n\r\nconst TodoSearch = () => {\r\n\r\n    //datos del todocontext\r\n    const { \r\n        search, \r\n        setSearch \r\n    } = useContext(TodoContext);\r\n\r\n    const onChangeValue = (event) => {\r\n        setSearch(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <input \r\n            className=\"todo-search\" \r\n            placeholder=\"Buscar . . .\"\r\n            value={search}\r\n            onChange={onChangeValue}\r\n        />\r\n    )\r\n}\r\n\r\nexport default TodoSearch;\r\n","import React from 'react';\r\nimport \"../styles/TodoList.scss\";\r\n\r\nconst TodoList = props => {\r\n    return (\r\n        <section>\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport \"../styles/TodoItem.scss\";\r\n\r\nconst TodoItem = props => {\r\n\r\n    return (\r\n        <li className=\"todo-item\">\r\n            <span \r\n                className={`icon icon-check ${props.completed && 'icon-check--active'}`}\r\n                onClick={props.onComplete}\r\n            >\r\n                <div className=\"check-img\"/>\r\n            </span>\r\n            <p className={`todo-item-p ${props.completed && 'todo-item-p--complete'}`}>\r\n                {props.text}\r\n            </p>\r\n            <span \r\n                className=\"icon icon-delete\"\r\n                onClick={props.onDelete}  \r\n            >\r\n                <div className=\"delete-img\"/>\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport \"../styles/CreateTodoButton.scss\";\r\n\r\nconst CreateTodoButton = ({ openModal, setOpenModal }) => {\r\n\r\n    const toggleButton = () => {\r\n        setOpenModal(prevState => !prevState);\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className={`create-todo-button open-${openModal}`}\r\n            onClick={toggleButton}\r\n        >\r\n            +\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CreateTodoButton;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"../styles/Modal.scss\";\r\n\r\nconst Modal = ({ children }) => {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"modal-background\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, {useContext, useState} from 'react';\r\nimport \"../styles/TodoForm.scss\";\r\n\r\n//context\r\nimport {TodoContext} from \"../context/TodoContext\";\r\n\r\n\r\nconst TodoForm = () => {\r\n\r\n    const [newTodoValue, setNewTodoValue] = useState('');\r\n\r\n    //datos del todocontext\r\n    const {\r\n        insertTodo,\r\n        setOpenModal\r\n    } = useContext(TodoContext);\r\n\r\n\r\n    const onChange = (event) => {\r\n        setNewTodoValue(event.target.value);\r\n    }\r\n\r\n    const onCancel = () => {\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        //con esto no se recarga la pagina\r\n        event.preventDefault();\r\n\r\n        insertTodo(newTodoValue);\r\n\r\n        setOpenModal(false);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label>Escribe tu nuevo To Do</label>\r\n            <textarea\r\n                value = {newTodoValue}\r\n                onChange = {onChange}\r\n                placeholder = \"Escribe una nueva tarea\"\r\n            />\r\n            <div className=\"todo-form-button-container\">\r\n\r\n                <button\r\n                    className=\"todo-form-button todo-form-button-add\"\r\n                    type= \"submit\"\r\n                >\r\n                    AÃ±adir\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm;\r\n","import React from 'react';\r\n\r\nconst TodosError = ({ error }) => {\r\n    return (\r\n        <div>\r\n            errorrrrrr\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodosError;\r\n","import React from 'react';\r\nimport \"../../styles/skeleton/TodosLoading.scss\";\r\n\r\nconst TodosLoading = () => {\r\n    return (\r\n        <div className=\"loading-todo-container\">\r\n            <span className=\"loading-todo-complete-icon\" />\r\n            <p className=\"loading-todo-text\"></p>\r\n            <span className=\"loading-todo-delete-icon\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodosLoading;\r\n","import React from 'react';\r\n\r\nconst EmptyTodos = () => {\r\n    return (\r\n        <div>\r\n            Crea tu TODO\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyTodos;\r\n","import React, {useContext} from 'react';\r\nimport \"./App.scss\";\r\n\r\n//context\r\nimport { TodoContext } from '../context/TodoContext';\r\n\r\n//components\r\nimport TodoCounter from \"../components/TodoCounter\";\r\nimport TodoSearch from \"../components/TodoSearch\";\r\nimport TodoList from \"../components/TodoList\";\r\nimport TodoItem from \"../components/TodoItem\";\r\nimport CreateTodoButton from \"../components/CreateTodoButton\";\r\nimport Modal from \"../components/Modal\";\r\nimport TodoForm from '../components/TodoForm';\r\n\r\n//skeleton\r\nimport TodosError from \"../components/skeleton/TodosError\";\r\nimport TodosLoading from \"../components/skeleton/TodosLoading\";\r\nimport EmptyTodos from \"../components/skeleton/EmptyTodos\";\r\n\r\n\r\nconst AppUI = () => {\r\n\r\n  //datos del todocontext\r\n  const { \r\n    error, \r\n    loading, \r\n    todosFiltered, \r\n    completeTodo, \r\n    deleteTodo,\r\n    openModal,\r\n    setOpenModal\r\n  } = useContext(TodoContext);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n        <TodoCounter />\r\n\r\n        <TodoSearch />\r\n\r\n        <TodoList>\r\n          {/*si hubo error*/}\r\n          {error && <TodosError error={error} />}\r\n\r\n          {/*cargando*/}\r\n          {loading && \r\n            new Array(4).fill().map((item, index)=>(\r\n              <TodosLoading />\r\n          ))}\r\n\r\n          {/*si la lista esta vacia*/}\r\n          {(!loading && !todosFiltered.length) && <EmptyTodos />}\r\n\r\n          {todosFiltered.map((todo, i) => (\r\n            <TodoItem \r\n              key={i} \r\n              text={todo.text}\r\n              completed={todo.completed}\r\n              onComplete={() => completeTodo(todo.text)}\r\n              onDelete={() => deleteTodo(todo.text)}\r\n            />\r\n          ))}\r\n        </TodoList>\r\n\r\n        {openModal && (\r\n          <Modal>\r\n            <TodoForm />\r\n          </Modal>\r\n        )}\r\n  \r\n        <CreateTodoButton \r\n          openModal={openModal}\r\n          setOpenModal={setOpenModal}\r\n        />\r\n  \r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AppUI;\r\n","import React from \"react\";\n\n//context\nimport { TodoProvider } from \"../context/TodoContext\";\n\n//components\nimport AppUI from \"./AppUI\";\n\n\nconst App = () => {\n\n  //El provider del context del TODO\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}